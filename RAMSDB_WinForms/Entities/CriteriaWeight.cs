//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework DbContext template.
// Code is generated on: 4/15/2020 1:44:59 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Collections.ObjectModel;
using System.ComponentModel;

namespace RAMSDBModel
{
    [System.ComponentModel.DataAnnotations.Schema.Table("CriteriaWeight", Schema = "dbo")]
    public partial class CriteriaWeight : INotifyPropertyChanged
    {

        public CriteriaWeight()
        {
            this.CooperativeCentersAlongRoads = new ObservableListSource<CooperativeCentersAlongRoad>();
            this.EducationCentersAlongRoads = new ObservableListSource<EducationCentersAlongRoad>();
            this.HealthCentersAlongRoads = new ObservableListSource<HealthCentersAlongRoad>();
            this.KebelesVillagesCommunitiesConnecteds = new ObservableListSource<KebelesVillagesCommunitiesConnected>();
            this.MarketsConnectByRoads = new ObservableListSource<MarketsConnectByRoad>();
            this.OtherProjectsAlongRoads = new ObservableListSource<OtherProjectsAlongRoad>();
            this.RoadClassifications = new ObservableListSource<RoadClassification>();
            this.RoadTraversesFarmlands = new ObservableListSource<RoadTraversesFarmland>();
            this.TradingCentersAlongRoads = new ObservableListSource<TradingCentersAlongRoad>();
            this.TrafficPerDayPoints = new ObservableListSource<TrafficPerDayPoints>();
            OnCreated();
        }

        #region Properties

        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "int", Order = 0)]
        [System.ComponentModel.DataAnnotations.Schema.DatabaseGenerated(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity)]
        public virtual int CriteriaWeightID
        {
            get
            {
                return _CriteriaWeightID;
            }
            set
            {
                if (_CriteriaWeightID != value)
                {
                    _CriteriaWeightID = value;
                    OnPropertyChanged("CriteriaWeightID");
                }
            }
        }
        private int _CriteriaWeightID;

        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "varchar", Order = 1)]
        public virtual string CriteriaDescription
        {
            get
            {
                return _CriteriaDescription;
            }
            set
            {
                if (_CriteriaDescription != value)
                {
                    _CriteriaDescription = value;
                    OnPropertyChanged("CriteriaDescription");
                }
            }
        }
        private string _CriteriaDescription;

        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "numeric", Order = 2)]
        public virtual decimal? CriteriaWeightScore
        {
            get
            {
                return _CriteriaWeightScore;
            }
            set
            {
                if (_CriteriaWeightScore != value)
                {
                    _CriteriaWeightScore = value;
                    OnPropertyChanged("CriteriaWeightScore");
                }
            }
        }
        private decimal? _CriteriaWeightScore;

        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "smallint", Order = 3)]
        public virtual short? Year
        {
            get
            {
                return _Year;
            }
            set
            {
                if (_Year != value)
                {
                    _Year = value;
                    OnPropertyChanged("Year");
                }
            }
        }
        private short? _Year;

        #endregion

        #region Navigation Properties
        [System.ComponentModel.DataAnnotations.Schema.InverseProperty("CriteriaWeight")]
        public virtual ObservableListSource<CooperativeCentersAlongRoad> CooperativeCentersAlongRoads
        {
            get;
            set;
        }
        [System.ComponentModel.DataAnnotations.Schema.InverseProperty("CriteriaWeight")]
        public virtual ObservableListSource<EducationCentersAlongRoad> EducationCentersAlongRoads
        {
            get;
            set;
        }
        [System.ComponentModel.DataAnnotations.Schema.InverseProperty("CriteriaWeight")]
        public virtual ObservableListSource<HealthCentersAlongRoad> HealthCentersAlongRoads
        {
            get;
            set;
        }
        [System.ComponentModel.DataAnnotations.Schema.InverseProperty("CriteriaWeight")]
        public virtual ObservableListSource<KebelesVillagesCommunitiesConnected> KebelesVillagesCommunitiesConnecteds
        {
            get;
            set;
        }
        [System.ComponentModel.DataAnnotations.Schema.InverseProperty("CriteriaWeight")]
        public virtual ObservableListSource<MarketsConnectByRoad> MarketsConnectByRoads
        {
            get;
            set;
        }
        [System.ComponentModel.DataAnnotations.Schema.InverseProperty("CriteriaWeight")]
        public virtual ObservableListSource<OtherProjectsAlongRoad> OtherProjectsAlongRoads
        {
            get;
            set;
        }
        [System.ComponentModel.DataAnnotations.Schema.InverseProperty("CriteriaWeight")]
        public virtual ObservableListSource<RoadClassification> RoadClassifications
        {
            get;
            set;
        }
        [System.ComponentModel.DataAnnotations.Schema.InverseProperty("CriteriaWeight")]
        public virtual ObservableListSource<RoadTraversesFarmland> RoadTraversesFarmlands
        {
            get;
            set;
        }
        [System.ComponentModel.DataAnnotations.Schema.InverseProperty("CriteriaWeight")]
        public virtual ObservableListSource<TradingCentersAlongRoad> TradingCentersAlongRoads
        {
            get;
            set;
        }
        [System.ComponentModel.DataAnnotations.Schema.InverseProperty("CriteriaWeight")]
        public virtual ObservableListSource<TrafficPerDayPoints> TrafficPerDayPoints
        {
            get;
            set;
        }

        #endregion

        #region Extensibility Method Definitions
        partial void OnCreated();
        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        protected void OnPropertyChanged(string propertyName) {

          if (PropertyChanged != null)
            PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }

        #endregion
    }

}
