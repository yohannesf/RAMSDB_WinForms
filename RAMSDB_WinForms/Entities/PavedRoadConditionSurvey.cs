//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework DbContext template.
// Code is generated on: 4/15/2020 1:44:59 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Collections.ObjectModel;
using System.ComponentModel;

namespace RAMSDBModel
{
    [System.ComponentModel.DataAnnotations.Schema.Table("PavedRoadConditionSurvey", Schema = "dbo")]
    public partial class PavedRoadConditionSurvey : INotifyPropertyChanged
    {

        public PavedRoadConditionSurvey()
        {
            OnCreated();
        }

        #region Properties

        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "int", Order = 0)]
        [System.ComponentModel.DataAnnotations.Schema.DatabaseGenerated(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity)]
        public virtual int PRCSID
        {
            get
            {
                return _PRCSID;
            }
            set
            {
                if (_PRCSID != value)
                {
                    _PRCSID = value;
                    OnPropertyChanged("PRCSID");
                }
            }
        }
        private int _PRCSID;

        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "smallint", Order = 1)]
        public virtual short PRCSYear
        {
            get
            {
                return _PRCSYear;
            }
            set
            {
                if (_PRCSYear != value)
                {
                    _PRCSYear = value;
                    OnPropertyChanged("PRCSYear");
                }
            }
        }
        private short _PRCSYear;

        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "int", Order = 2)]
        public virtual int RoadID
        {
            get
            {
                return _RoadID;
            }
            set
            {
                if (_RoadID != value)
                {
                    _RoadID = value;
                    OnPropertyChanged("RoadID");
                }
            }
        }
        private int _RoadID;

        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "int", Order = 3)]
        public virtual int UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    _UserID = value;
                    OnPropertyChanged("UserID");
                }
            }
        }
        private int _UserID;

        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "varchar", Order = 4)]
        public virtual string Direction
        {
            get
            {
                return _Direction;
            }
            set
            {
                if (_Direction != value)
                {
                    _Direction = value;
                    OnPropertyChanged("Direction");
                }
            }
        }
        private string _Direction;

        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "varchar", Order = 5)]
        public virtual string RoadSectionNo
        {
            get
            {
                return _RoadSectionNo;
            }
            set
            {
                if (_RoadSectionNo != value)
                {
                    _RoadSectionNo = value;
                    OnPropertyChanged("RoadSectionNo");
                }
            }
        }
        private string _RoadSectionNo;

        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "numeric", Order = 6)]
        public virtual decimal? SectionStartKM
        {
            get
            {
                return _SectionStartKM;
            }
            set
            {
                if (_SectionStartKM != value)
                {
                    _SectionStartKM = value;
                    OnPropertyChanged("SectionStartKM");
                }
            }
        }
        private decimal? _SectionStartKM;

        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "numeric", Order = 7)]
        public virtual decimal? SectionEndKM
        {
            get
            {
                return _SectionEndKM;
            }
            set
            {
                if (_SectionEndKM != value)
                {
                    _SectionEndKM = value;
                    OnPropertyChanged("SectionEndKM");
                }
            }
        }
        private decimal? _SectionEndKM;

        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "numeric", Order = 8)]
        public virtual decimal? SectionLength
        {
            get
            {
                return _SectionLength;
            }
            set
            {
                if (_SectionLength != value)
                {
                    _SectionLength = value;
                    OnPropertyChanged("SectionLength");
                }
            }
        }
        private decimal? _SectionLength;

        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "int", Order = 9)]
        public virtual int SurfaceType
        {
            get
            {
                return _SurfaceType;
            }
            set
            {
                if (_SurfaceType != value)
                {
                    _SurfaceType = value;
                    OnPropertyChanged("SurfaceType");
                }
            }
        }
        private int _SurfaceType;

        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "numeric", Order = 10)]
        public virtual decimal? XBegin
        {
            get
            {
                return _XBegin;
            }
            set
            {
                if (_XBegin != value)
                {
                    _XBegin = value;
                    OnPropertyChanged("XBegin");
                }
            }
        }
        private decimal? _XBegin;

        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "numeric", Order = 11)]
        public virtual decimal? YBegin
        {
            get
            {
                return _YBegin;
            }
            set
            {
                if (_YBegin != value)
                {
                    _YBegin = value;
                    OnPropertyChanged("YBegin");
                }
            }
        }
        private decimal? _YBegin;

        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "numeric", Order = 12)]
        public virtual decimal? XEnd
        {
            get
            {
                return _XEnd;
            }
            set
            {
                if (_XEnd != value)
                {
                    _XEnd = value;
                    OnPropertyChanged("XEnd");
                }
            }
        }
        private decimal? _XEnd;

        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "numeric", Order = 13)]
        public virtual decimal? YEnd
        {
            get
            {
                return _YEnd;
            }
            set
            {
                if (_YEnd != value)
                {
                    _YEnd = value;
                    OnPropertyChanged("YEnd");
                }
            }
        }
        private decimal? _YEnd;

        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "int", Order = 14)]
        public virtual int? LeftDrainSilt
        {
            get
            {
                return _LeftDrainSilt;
            }
            set
            {
                if (_LeftDrainSilt != value)
                {
                    _LeftDrainSilt = value;
                    OnPropertyChanged("LeftDrainSilt");
                }
            }
        }
        private int? _LeftDrainSilt;

        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "int", Order = 15)]
        public virtual int? RightDrainSilt
        {
            get
            {
                return _RightDrainSilt;
            }
            set
            {
                if (_RightDrainSilt != value)
                {
                    _RightDrainSilt = value;
                    OnPropertyChanged("RightDrainSilt");
                }
            }
        }
        private int? _RightDrainSilt;

        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "int", Order = 16)]
        public virtual int? LeftDrainScour
        {
            get
            {
                return _LeftDrainScour;
            }
            set
            {
                if (_LeftDrainScour != value)
                {
                    _LeftDrainScour = value;
                    OnPropertyChanged("LeftDrainScour");
                }
            }
        }
        private int? _LeftDrainScour;

        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "int", Order = 17)]
        public virtual int? RightDrainScour
        {
            get
            {
                return _RightDrainScour;
            }
            set
            {
                if (_RightDrainScour != value)
                {
                    _RightDrainScour = value;
                    OnPropertyChanged("RightDrainScour");
                }
            }
        }
        private int? _RightDrainScour;

        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "int", Order = 18)]
        public virtual int? LeftDrainOverallCondition
        {
            get
            {
                return _LeftDrainOverallCondition;
            }
            set
            {
                if (_LeftDrainOverallCondition != value)
                {
                    _LeftDrainOverallCondition = value;
                    OnPropertyChanged("LeftDrainOverallCondition");
                }
            }
        }
        private int? _LeftDrainOverallCondition;

        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "int", Order = 19)]
        public virtual int? RightDrainOverallCondition
        {
            get
            {
                return _RightDrainOverallCondition;
            }
            set
            {
                if (_RightDrainOverallCondition != value)
                {
                    _RightDrainOverallCondition = value;
                    OnPropertyChanged("RightDrainOverallCondition");
                }
            }
        }
        private int? _RightDrainOverallCondition;

        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "int", Order = 20)]
        public virtual int? LeftShoulderDeformationScour
        {
            get
            {
                return _LeftShoulderDeformationScour;
            }
            set
            {
                if (_LeftShoulderDeformationScour != value)
                {
                    _LeftShoulderDeformationScour = value;
                    OnPropertyChanged("LeftShoulderDeformationScour");
                }
            }
        }
        private int? _LeftShoulderDeformationScour;

        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "int", Order = 21)]
        public virtual int? RightShoulderDeformationScour
        {
            get
            {
                return _RightShoulderDeformationScour;
            }
            set
            {
                if (_RightShoulderDeformationScour != value)
                {
                    _RightShoulderDeformationScour = value;
                    OnPropertyChanged("RightShoulderDeformationScour");
                }
            }
        }
        private int? _RightShoulderDeformationScour;

        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "int", Order = 22)]
        public virtual int? LeftShoulderEdgeDamage
        {
            get
            {
                return _LeftShoulderEdgeDamage;
            }
            set
            {
                if (_LeftShoulderEdgeDamage != value)
                {
                    _LeftShoulderEdgeDamage = value;
                    OnPropertyChanged("LeftShoulderEdgeDamage");
                }
            }
        }
        private int? _LeftShoulderEdgeDamage;

        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "int", Order = 23)]
        public virtual int? RightShoulderEdgeDamage
        {
            get
            {
                return _RightShoulderEdgeDamage;
            }
            set
            {
                if (_RightShoulderEdgeDamage != value)
                {
                    _RightShoulderEdgeDamage = value;
                    OnPropertyChanged("RightShoulderEdgeDamage");
                }
            }
        }
        private int? _RightShoulderEdgeDamage;

        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "int", Order = 24)]
        public virtual int? LeftShoulderEdgeStep
        {
            get
            {
                return _LeftShoulderEdgeStep;
            }
            set
            {
                if (_LeftShoulderEdgeStep != value)
                {
                    _LeftShoulderEdgeStep = value;
                    OnPropertyChanged("LeftShoulderEdgeStep");
                }
            }
        }
        private int? _LeftShoulderEdgeStep;

        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "int", Order = 25)]
        public virtual int? RightShoulderEdgeStep
        {
            get
            {
                return _RightShoulderEdgeStep;
            }
            set
            {
                if (_RightShoulderEdgeStep != value)
                {
                    _RightShoulderEdgeStep = value;
                    OnPropertyChanged("RightShoulderEdgeStep");
                }
            }
        }
        private int? _RightShoulderEdgeStep;

        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "int", Order = 26)]
        public virtual int? CarriagewayCracking
        {
            get
            {
                return _CarriagewayCracking;
            }
            set
            {
                if (_CarriagewayCracking != value)
                {
                    _CarriagewayCracking = value;
                    OnPropertyChanged("CarriagewayCracking");
                }
            }
        }
        private int? _CarriagewayCracking;

        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "int", Order = 27)]
        public virtual int? CarriagewayFailure
        {
            get
            {
                return _CarriagewayFailure;
            }
            set
            {
                if (_CarriagewayFailure != value)
                {
                    _CarriagewayFailure = value;
                    OnPropertyChanged("CarriagewayFailure");
                }
            }
        }
        private int? _CarriagewayFailure;

        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "int", Order = 28)]
        public virtual int? CarriagewayPotholes
        {
            get
            {
                return _CarriagewayPotholes;
            }
            set
            {
                if (_CarriagewayPotholes != value)
                {
                    _CarriagewayPotholes = value;
                    OnPropertyChanged("CarriagewayPotholes");
                }
            }
        }
        private int? _CarriagewayPotholes;

        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "int", Order = 29)]
        public virtual int? CarriagewayRavellingBleeding
        {
            get
            {
                return _CarriagewayRavellingBleeding;
            }
            set
            {
                if (_CarriagewayRavellingBleeding != value)
                {
                    _CarriagewayRavellingBleeding = value;
                    OnPropertyChanged("CarriagewayRavellingBleeding");
                }
            }
        }
        private int? _CarriagewayRavellingBleeding;

        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "int", Order = 30)]
        public virtual int? CarriagewayRutting
        {
            get
            {
                return _CarriagewayRutting;
            }
            set
            {
                if (_CarriagewayRutting != value)
                {
                    _CarriagewayRutting = value;
                    OnPropertyChanged("CarriagewayRutting");
                }
            }
        }
        private int? _CarriagewayRutting;

        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "int", Order = 31)]
        public virtual int? CarriagewayOverallCondition
        {
            get
            {
                return _CarriagewayOverallCondition;
            }
            set
            {
                if (_CarriagewayOverallCondition != value)
                {
                    _CarriagewayOverallCondition = value;
                    OnPropertyChanged("CarriagewayOverallCondition");
                }
            }
        }
        private int? _CarriagewayOverallCondition;

        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "date", Order = 32)]
        public virtual global::System.DateTime? DateOfAssessment
        {
            get
            {
                return _DateOfAssessment;
            }
            set
            {
                if (_DateOfAssessment != value)
                {
                    _DateOfAssessment = value;
                    OnPropertyChanged("DateOfAssessment");
                }
            }
        }
        private global::System.DateTime? _DateOfAssessment;

        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "varchar", Order = 33)]
        public virtual string AssessedBy
        {
            get
            {
                return _AssessedBy;
            }
            set
            {
                if (_AssessedBy != value)
                {
                    _AssessedBy = value;
                    OnPropertyChanged("AssessedBy");
                }
            }
        }
        private string _AssessedBy;

        [System.ComponentModel.DataAnnotations.Schema.Column(TypeName = "text", Order = 34)]
        public virtual string Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                if (_Comments != value)
                {
                    _Comments = value;
                    OnPropertyChanged("Comments");
                }
            }
        }
        private string _Comments;

        #endregion

        #region Navigation Properties
        [System.ComponentModel.DataAnnotations.Schema.ForeignKey("UserID")]
        [System.ComponentModel.DataAnnotations.Schema.InverseProperty("PavedRoadConditionSurveys")]
        public virtual User User
        {
            get
            {
                return _User;
            }
            set
            {
                if (_User != value)
                {
                    _User = value;
                    OnPropertyChanged("User");
                }
            }
        }
        private User _User;
        [System.ComponentModel.DataAnnotations.Schema.ForeignKey("RoadID")]
        [System.ComponentModel.DataAnnotations.Schema.InverseProperty("PavedRoadConditionSurveys")]
        public virtual RoadsGISData RoadsGISData
        {
            get
            {
                return _RoadsGISData;
            }
            set
            {
                if (_RoadsGISData != value)
                {
                    _RoadsGISData = value;
                    OnPropertyChanged("RoadsGISData");
                }
            }
        }
        private RoadsGISData _RoadsGISData;
        [System.ComponentModel.DataAnnotations.Schema.ForeignKey("SurfaceType")]
        [System.ComponentModel.DataAnnotations.Schema.InverseProperty("PavedRoadConditionSurveys")]
        public virtual RoadSurfaceType RoadSurfaceType
        {
            get
            {
                return _RoadSurfaceType;
            }
            set
            {
                if (_RoadSurfaceType != value)
                {
                    _RoadSurfaceType = value;
                    OnPropertyChanged("RoadSurfaceType");
                }
            }
        }
        private RoadSurfaceType _RoadSurfaceType;
        [System.ComponentModel.DataAnnotations.Schema.ForeignKey("LeftDrainSilt")]
        [System.ComponentModel.DataAnnotations.Schema.InverseProperty("PavedRoadConditionSurveys_LeftDrainSilt")]
        public virtual PavedSideDrainSilt PavedSideDrainSilt_LeftDrainSilt
        {
            get
            {
                return _PavedSideDrainSilt_LeftDrainSilt;
            }
            set
            {
                if (_PavedSideDrainSilt_LeftDrainSilt != value)
                {
                    _PavedSideDrainSilt_LeftDrainSilt = value;
                    OnPropertyChanged("PavedSideDrainSilt_LeftDrainSilt");
                }
            }
        }
        private PavedSideDrainSilt _PavedSideDrainSilt_LeftDrainSilt;
        [System.ComponentModel.DataAnnotations.Schema.ForeignKey("RightDrainSilt")]
        [System.ComponentModel.DataAnnotations.Schema.InverseProperty("PavedRoadConditionSurveys_RightDrainSilt")]
        public virtual PavedSideDrainSilt PavedSideDrainSilt_RightDrainSilt
        {
            get
            {
                return _PavedSideDrainSilt_RightDrainSilt;
            }
            set
            {
                if (_PavedSideDrainSilt_RightDrainSilt != value)
                {
                    _PavedSideDrainSilt_RightDrainSilt = value;
                    OnPropertyChanged("PavedSideDrainSilt_RightDrainSilt");
                }
            }
        }
        private PavedSideDrainSilt _PavedSideDrainSilt_RightDrainSilt;
        [System.ComponentModel.DataAnnotations.Schema.ForeignKey("LeftDrainScour")]
        [System.ComponentModel.DataAnnotations.Schema.InverseProperty("PavedRoadConditionSurveys_LeftDrainScour")]
        public virtual PavedSideDrainScour PavedSideDrainScour_LeftDrainScour
        {
            get
            {
                return _PavedSideDrainScour_LeftDrainScour;
            }
            set
            {
                if (_PavedSideDrainScour_LeftDrainScour != value)
                {
                    _PavedSideDrainScour_LeftDrainScour = value;
                    OnPropertyChanged("PavedSideDrainScour_LeftDrainScour");
                }
            }
        }
        private PavedSideDrainScour _PavedSideDrainScour_LeftDrainScour;
        [System.ComponentModel.DataAnnotations.Schema.ForeignKey("RightDrainScour")]
        [System.ComponentModel.DataAnnotations.Schema.InverseProperty("PavedRoadConditionSurveys_RightDrainScour")]
        public virtual PavedSideDrainScour PavedSideDrainScour_RightDrainScour
        {
            get
            {
                return _PavedSideDrainScour_RightDrainScour;
            }
            set
            {
                if (_PavedSideDrainScour_RightDrainScour != value)
                {
                    _PavedSideDrainScour_RightDrainScour = value;
                    OnPropertyChanged("PavedSideDrainScour_RightDrainScour");
                }
            }
        }
        private PavedSideDrainScour _PavedSideDrainScour_RightDrainScour;
        [System.ComponentModel.DataAnnotations.Schema.ForeignKey("LeftDrainOverallCondition")]
        [System.ComponentModel.DataAnnotations.Schema.InverseProperty("PavedRoadConditionSurveys_LeftDrainOverallCondition")]
        public virtual PavedOverallCondition PavedOverallCondition_LeftDrainOverallCondition
        {
            get
            {
                return _PavedOverallCondition_LeftDrainOverallCondition;
            }
            set
            {
                if (_PavedOverallCondition_LeftDrainOverallCondition != value)
                {
                    _PavedOverallCondition_LeftDrainOverallCondition = value;
                    OnPropertyChanged("PavedOverallCondition_LeftDrainOverallCondition");
                }
            }
        }
        private PavedOverallCondition _PavedOverallCondition_LeftDrainOverallCondition;
        [System.ComponentModel.DataAnnotations.Schema.ForeignKey("RightDrainOverallCondition")]
        [System.ComponentModel.DataAnnotations.Schema.InverseProperty("PavedRoadConditionSurveys_RightDrainOverallCondition")]
        public virtual PavedOverallCondition PavedOverallCondition_RightDrainOverallCondition
        {
            get
            {
                return _PavedOverallCondition_RightDrainOverallCondition;
            }
            set
            {
                if (_PavedOverallCondition_RightDrainOverallCondition != value)
                {
                    _PavedOverallCondition_RightDrainOverallCondition = value;
                    OnPropertyChanged("PavedOverallCondition_RightDrainOverallCondition");
                }
            }
        }
        private PavedOverallCondition _PavedOverallCondition_RightDrainOverallCondition;
        [System.ComponentModel.DataAnnotations.Schema.ForeignKey("LeftShoulderDeformationScour")]
        [System.ComponentModel.DataAnnotations.Schema.InverseProperty("PavedRoadConditionSurveys_LeftShoulderDeformationScour")]
        public virtual PavedShoulderDeformationScour PavedShoulderDeformationScour_LeftShoulderDeformationScour
        {
            get
            {
                return _PavedShoulderDeformationScour_LeftShoulderDeformationScour;
            }
            set
            {
                if (_PavedShoulderDeformationScour_LeftShoulderDeformationScour != value)
                {
                    _PavedShoulderDeformationScour_LeftShoulderDeformationScour = value;
                    OnPropertyChanged("PavedShoulderDeformationScour_LeftShoulderDeformationScour");
                }
            }
        }
        private PavedShoulderDeformationScour _PavedShoulderDeformationScour_LeftShoulderDeformationScour;
        [System.ComponentModel.DataAnnotations.Schema.ForeignKey("RightShoulderDeformationScour")]
        [System.ComponentModel.DataAnnotations.Schema.InverseProperty("PavedRoadConditionSurveys_RightShoulderDeformationScour")]
        public virtual PavedShoulderDeformationScour PavedShoulderDeformationScour_RightShoulderDeformationScour
        {
            get
            {
                return _PavedShoulderDeformationScour_RightShoulderDeformationScour;
            }
            set
            {
                if (_PavedShoulderDeformationScour_RightShoulderDeformationScour != value)
                {
                    _PavedShoulderDeformationScour_RightShoulderDeformationScour = value;
                    OnPropertyChanged("PavedShoulderDeformationScour_RightShoulderDeformationScour");
                }
            }
        }
        private PavedShoulderDeformationScour _PavedShoulderDeformationScour_RightShoulderDeformationScour;
        [System.ComponentModel.DataAnnotations.Schema.ForeignKey("LeftShoulderEdgeDamage")]
        [System.ComponentModel.DataAnnotations.Schema.InverseProperty("PavedRoadConditionSurveys_LeftShoulderEdgeDamage")]
        public virtual PavedEdgeDamage PavedEdgeDamage_LeftShoulderEdgeDamage
        {
            get
            {
                return _PavedEdgeDamage_LeftShoulderEdgeDamage;
            }
            set
            {
                if (_PavedEdgeDamage_LeftShoulderEdgeDamage != value)
                {
                    _PavedEdgeDamage_LeftShoulderEdgeDamage = value;
                    OnPropertyChanged("PavedEdgeDamage_LeftShoulderEdgeDamage");
                }
            }
        }
        private PavedEdgeDamage _PavedEdgeDamage_LeftShoulderEdgeDamage;
        [System.ComponentModel.DataAnnotations.Schema.ForeignKey("RightShoulderEdgeDamage")]
        [System.ComponentModel.DataAnnotations.Schema.InverseProperty("PavedRoadConditionSurveys_RightShoulderEdgeDamage")]
        public virtual PavedEdgeDamage PavedEdgeDamage_RightShoulderEdgeDamage
        {
            get
            {
                return _PavedEdgeDamage_RightShoulderEdgeDamage;
            }
            set
            {
                if (_PavedEdgeDamage_RightShoulderEdgeDamage != value)
                {
                    _PavedEdgeDamage_RightShoulderEdgeDamage = value;
                    OnPropertyChanged("PavedEdgeDamage_RightShoulderEdgeDamage");
                }
            }
        }
        private PavedEdgeDamage _PavedEdgeDamage_RightShoulderEdgeDamage;
        [System.ComponentModel.DataAnnotations.Schema.ForeignKey("LeftShoulderEdgeStep")]
        [System.ComponentModel.DataAnnotations.Schema.InverseProperty("PavedRoadConditionSurveys_LeftShoulderEdgeStep")]
        public virtual PavedEdgeStep PavedEdgeStep_LeftShoulderEdgeStep
        {
            get
            {
                return _PavedEdgeStep_LeftShoulderEdgeStep;
            }
            set
            {
                if (_PavedEdgeStep_LeftShoulderEdgeStep != value)
                {
                    _PavedEdgeStep_LeftShoulderEdgeStep = value;
                    OnPropertyChanged("PavedEdgeStep_LeftShoulderEdgeStep");
                }
            }
        }
        private PavedEdgeStep _PavedEdgeStep_LeftShoulderEdgeStep;
        [System.ComponentModel.DataAnnotations.Schema.ForeignKey("RightShoulderEdgeStep")]
        [System.ComponentModel.DataAnnotations.Schema.InverseProperty("PavedRoadConditionSurveys_RightShoulderEdgeStep")]
        public virtual PavedEdgeStep PavedEdgeStep_RightShoulderEdgeStep
        {
            get
            {
                return _PavedEdgeStep_RightShoulderEdgeStep;
            }
            set
            {
                if (_PavedEdgeStep_RightShoulderEdgeStep != value)
                {
                    _PavedEdgeStep_RightShoulderEdgeStep = value;
                    OnPropertyChanged("PavedEdgeStep_RightShoulderEdgeStep");
                }
            }
        }
        private PavedEdgeStep _PavedEdgeStep_RightShoulderEdgeStep;
        [System.ComponentModel.DataAnnotations.Schema.ForeignKey("CarriagewayCracking")]
        [System.ComponentModel.DataAnnotations.Schema.InverseProperty("PavedRoadConditionSurveys")]
        public virtual PavedCarriagewayCracking PavedCarriagewayCracking
        {
            get
            {
                return _PavedCarriagewayCracking;
            }
            set
            {
                if (_PavedCarriagewayCracking != value)
                {
                    _PavedCarriagewayCracking = value;
                    OnPropertyChanged("PavedCarriagewayCracking");
                }
            }
        }
        private PavedCarriagewayCracking _PavedCarriagewayCracking;
        [System.ComponentModel.DataAnnotations.Schema.ForeignKey("CarriagewayFailure")]
        [System.ComponentModel.DataAnnotations.Schema.InverseProperty("PavedRoadConditionSurveys")]
        public virtual PavedCarriagewayFailure PavedCarriagewayFailure
        {
            get
            {
                return _PavedCarriagewayFailure;
            }
            set
            {
                if (_PavedCarriagewayFailure != value)
                {
                    _PavedCarriagewayFailure = value;
                    OnPropertyChanged("PavedCarriagewayFailure");
                }
            }
        }
        private PavedCarriagewayFailure _PavedCarriagewayFailure;
        [System.ComponentModel.DataAnnotations.Schema.ForeignKey("CarriagewayPotholes")]
        [System.ComponentModel.DataAnnotations.Schema.InverseProperty("PavedRoadConditionSurveys")]
        public virtual PavedCarriagewayPotholes PavedCarriagewayPotholes
        {
            get
            {
                return _PavedCarriagewayPotholes;
            }
            set
            {
                if (_PavedCarriagewayPotholes != value)
                {
                    _PavedCarriagewayPotholes = value;
                    OnPropertyChanged("PavedCarriagewayPotholes");
                }
            }
        }
        private PavedCarriagewayPotholes _PavedCarriagewayPotholes;
        [System.ComponentModel.DataAnnotations.Schema.ForeignKey("CarriagewayRavellingBleeding")]
        [System.ComponentModel.DataAnnotations.Schema.InverseProperty("PavedRoadConditionSurveys")]
        public virtual PavedCarriagewayRavellingBleeding PavedCarriagewayRavellingBleeding
        {
            get
            {
                return _PavedCarriagewayRavellingBleeding;
            }
            set
            {
                if (_PavedCarriagewayRavellingBleeding != value)
                {
                    _PavedCarriagewayRavellingBleeding = value;
                    OnPropertyChanged("PavedCarriagewayRavellingBleeding");
                }
            }
        }
        private PavedCarriagewayRavellingBleeding _PavedCarriagewayRavellingBleeding;
        [System.ComponentModel.DataAnnotations.Schema.ForeignKey("CarriagewayRutting")]
        [System.ComponentModel.DataAnnotations.Schema.InverseProperty("PavedRoadConditionSurveys")]
        public virtual PavedCarriagewayRutting PavedCarriagewayRutting
        {
            get
            {
                return _PavedCarriagewayRutting;
            }
            set
            {
                if (_PavedCarriagewayRutting != value)
                {
                    _PavedCarriagewayRutting = value;
                    OnPropertyChanged("PavedCarriagewayRutting");
                }
            }
        }
        private PavedCarriagewayRutting _PavedCarriagewayRutting;
        [System.ComponentModel.DataAnnotations.Schema.ForeignKey("CarriagewayOverallCondition")]
        [System.ComponentModel.DataAnnotations.Schema.InverseProperty("PavedRoadConditionSurveys_CarriagewayOverallCondition")]
        public virtual PavedOverallCondition PavedOverallCondition_CarriagewayOverallCondition
        {
            get
            {
                return _PavedOverallCondition_CarriagewayOverallCondition;
            }
            set
            {
                if (_PavedOverallCondition_CarriagewayOverallCondition != value)
                {
                    _PavedOverallCondition_CarriagewayOverallCondition = value;
                    OnPropertyChanged("PavedOverallCondition_CarriagewayOverallCondition");
                }
            }
        }
        private PavedOverallCondition _PavedOverallCondition_CarriagewayOverallCondition;

        #endregion

        #region Extensibility Method Definitions
        partial void OnCreated();
        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        protected void OnPropertyChanged(string propertyName) {

          if (PropertyChanged != null)
            PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }

        #endregion
    }

}
