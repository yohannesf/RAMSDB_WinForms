//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework DbContext template.
// Code is generated on: 4/15/2020 1:44:59 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Collections.ObjectModel;
using System.ComponentModel;

namespace RAMSDBModel
{
    [System.ComponentModel.DataAnnotations.Schema.ComplexType]
    public partial class TrafficScoreCalculationResult : INotifyPropertyChanged
    {
        #region Properties

        [System.ComponentModel.DataAnnotations.Required]
        public virtual short Idx
        {
            get
            {
                return _Idx;
            }
            set
            {
                if (_Idx != value)
                {
                    _Idx = value;
                    OnPropertyChanged("Idx");
                }
            }
        }
        private short _Idx;

        public virtual int? TcYear
        {
            get
            {
                return _TcYear;
            }
            set
            {
                if (_TcYear != value)
                {
                    _TcYear = value;
                    OnPropertyChanged("TcYear");
                }
            }
        }
        private int? _TcYear;

        public virtual int? RoadID
        {
            get
            {
                return _RoadID;
            }
            set
            {
                if (_RoadID != value)
                {
                    _RoadID = value;
                    OnPropertyChanged("RoadID");
                }
            }
        }
        private int? _RoadID;

        public virtual decimal? TCount
        {
            get
            {
                return _TCount;
            }
            set
            {
                if (_TCount != value)
                {
                    _TCount = value;
                    OnPropertyChanged("TCount");
                }
            }
        }
        private decimal? _TCount;

        public virtual decimal? CategoryMaxPoints
        {
            get
            {
                return _CategoryMaxPoints;
            }
            set
            {
                if (_CategoryMaxPoints != value)
                {
                    _CategoryMaxPoints = value;
                    OnPropertyChanged("CategoryMaxPoints");
                }
            }
        }
        private decimal? _CategoryMaxPoints;

        public virtual decimal? CriteriaWeight
        {
            get
            {
                return _CriteriaWeight;
            }
            set
            {
                if (_CriteriaWeight != value)
                {
                    _CriteriaWeight = value;
                    OnPropertyChanged("CriteriaWeight");
                }
            }
        }
        private decimal? _CriteriaWeight;

        public virtual decimal? CriteriaScore
        {
            get
            {
                return _CriteriaScore;
            }
            set
            {
                if (_CriteriaScore != value)
                {
                    _CriteriaScore = value;
                    OnPropertyChanged("CriteriaScore");
                }
            }
        }
        private decimal? _CriteriaScore;

        #endregion

        #region Extensibility Method Definitions
        partial void OnCreated();
        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        protected void OnPropertyChanged(string propertyName) {

          if (PropertyChanged != null)
            PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }

        #endregion
    }

}
